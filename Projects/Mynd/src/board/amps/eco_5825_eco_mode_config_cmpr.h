#pragma once
#include "tas5825p.h"

// From 2024-07-26

#if 0
// TAS5825P from normal-Mode to ECO-Mode (set EQ6 to 4dB, EQ8 to 1dB)
const tas5825p_cfg_reg_t tas5825p_normal_to_eco_mode_config_1[] = {
	{ 0x00, 0x00 }
	{ 0x7f, 0xaa }
	{ 0x00, 0x02 }
	{ CFG_META_BURST, 21 }
	{ 0x1c, 0x08 }
	{ 0x01, 0x40 }
	{ 0xca, 0xf0 }
	{ 0x04, 0x61 }
	{ 0x2f, 0x07 }
	{ 0xfa, 0x76 }
	{ 0x4b, 0x0f }
	{ 0xfb, 0x9e }
	{ 0xd1, 0xf8 }
	{ 0x04, 0x48 }
	{ 0xeb, 0x00 }
	{ CFG_META_BURST, 21 }
	{ 0x44, 0x08 }
	{ 0x00, 0x6b }
	{ 0x49, 0xf0 }
	{ 0x07, 0x13 }
	{ 0xb4, 0x07 }
	{ 0xf8, 0xb6 }
	{ 0x30, 0x0f }
	{ 0xf8, 0xec }
	{ 0x4c, 0xf8 }
	{ 0x06, 0xde }
	{ 0x87, 0x00 }
};
#endif


// TAS5825P from normal-Mode to ECO-Mode (set EQ settings)
const tas5825p_cfg_reg_t tas5825p_normal_to_eco_mode_config_1[] = {
	{ 0x00, 0x00 }
	{ 0x7f, 0xaa }
	{ 0x00, 0x02 }
	{ CFG_META_BURST, 23 }
	{ 0x08, 0x07 }
	{ 0xf7, 0x12 }
	{ 0x46, 0xf0 }
	{ 0x11, 0xdb }
	{ 0x74, 0x07 }
	{ 0xf7, 0x12 }
	{ 0x46, 0x0f }
	{ 0xee, 0x14 }
	{ 0x72, 0xf8 }
	{ 0x11, 0xcb }
	{ 0x5a, 0x08 }
	{ 0x00, 0x00 }
	{ CFG_META_SWITCH, 19 }
	{ 0x31, 0x00 }
	{ CFG_META_SWITCH, 18 }
	{ 0x00, 0x03 }
	{ CFG_META_BURST, 21 }
	{ 0x08, 0x08 }
	{ 0x01, 0xf4 }
	{ 0xf0, 0xf0 }
	{ 0x07, 0x0a }
	{ 0x9d, 0x07 }
	{ 0xf7, 0x5a }
	{ 0x23, 0x0f }
	{ 0xf8, 0xf5 }
	{ 0x63, 0xf8 }
	{ 0x06, 0xb0 }
	{ 0xed, 0x00 }
};

// TAS5825P from normal-Mode to ECO-Mode (set DRC settings of band 1)
const tas5825p_cfg_reg_t tas5825p_normal_to_eco_mode_config_2[] = {
	{ 0x00, 0x00 }
	{ 0x7f, 0x8c }
	{ 0x00, 0x11 }
	{ CFG_META_BURST, 94 }
	{ 0x1c, 0x02 }
	{ 0xa3, 0x9a }
	{ 0xcc, 0x00 }
	{ 0x88, 0x3f }
	{ 0xd1, 0x00 }
	{ 0x09, 0xc0 }
	{ 0x3d, 0x00 }
	{ 0x00, 0x00 }
	{ 0x00, 0xff }
	{ 0xd3, 0x7a }
	{ 0x6f, 0xff }
	{ 0x81, 0x47 }
	{ 0xae, 0xfc }
	{ 0x58, 0x8b }
	{ 0x89, 0xfd }
	{ 0x4d, 0x09 }
	{ 0xfa, 0x00 }
	{ 0x00, 0x00 }
	{ 0x00, 0xff }
	{ 0xaa, 0xf5 }
	{ 0x6a, 0x02 }
	{ 0xa3, 0x9a }
	{ 0xcc, 0x00 }
	{ 0x88, 0x3f }
	{ 0xd1, 0x00 }
	{ 0x09, 0xc0 }
	{ 0x3d, 0x00 }
	{ 0x00, 0x00 }
	{ 0x00, 0xff }
	{ 0xd3, 0x7a }
	{ 0x6f, 0xff }
	{ 0x81, 0x47 }
	{ 0xae, 0xfc }
	{ 0x58, 0x8b }
	{ 0x89, 0xfd }
	{ 0x4d, 0x09 }
	{ 0xfa, 0x00 }
	{ 0x00, 0x00 }
	{ 0x00, 0xff }
	{ 0xaa, 0xf5 }
	{ 0x6a, 0x00 }
	{ 0xe2, 0xc4 }
	{ 0x6b, 0x00 }
	{ 0x88, 0x3f }
	{ 0xd1, 0x00 }
	{ 0x06, 0xd3 }
	{ 0x72, 0x00 }
	{ CFG_META_SWITCH, 7 }
	{ 0x00, 0x12 }
	{ CFG_META_BURST, 14 }
	{ 0x08, 0xff }
	{ 0x81, 0x47 }
	{ 0xae, 0xf9 }
	{ 0x06, 0x21 }
	{ 0xa9, 0xfc }
	{ 0xf7, 0xff }
	{ 0x63, 0x00 }
	{ CFG_META_SWITCH, 7 }
};

// TAS5825P from normal-Mode to ECO-Mode (set Volume to 3.5dB)
const tas5825p_cfg_reg_t tas5825p_normal_to_eco_mode_config_3[] = {
	{ 0x00, 0x00 }
	{ 0x7f, 0x8c }
	{ 0x00, 0x0b }
	{ CFG_META_BURST, 9 }
	{ 0x0c, 0x00 }
	{ 0xbf, 0x84 }
	{ 0xa6, 0x00 }
	{ 0xbf, 0x84 }
	{ 0xa6, 0x00 }
};

#if 0
// TAS5825P from ECO-Mode to normalMode (set EQ6 to 8dB, EQ8 to 2.5dB)
const tas5825p_cfg_reg_t tas5825p_eco_to_normal_mode_config_1[] = {
	{ 0x00, 0x00 }
	{ 0x7f, 0xaa }
	{ 0x00, 0x02 }
	{ CFG_META_BURST, 21 }
	{ 0x1c, 0x08 }
	{ 0x03, 0x3d }
	{ 0x35, 0xf0 }
	{ 0x04, 0x61 }
	{ 0x2f, 0x07 }
	{ 0xf8, 0x79 }
	{ 0xe0, 0x0f }
	{ 0xfb, 0x9e }
	{ 0xd1, 0xf8 }
	{ 0x04, 0x48 }
	{ 0xeb, 0x00 }
	{ CFG_META_BURST, 21 }
	{ 0x44, 0x08 }
	{ 0x01, 0x25 }
	{ 0x41, 0xf0 }
	{ 0x07, 0x13 }
	{ 0xb4, 0x07 }
	{ 0xf7, 0xfc }
	{ 0x38, 0x0f }
	{ 0xf8, 0xec }
	{ 0x4c, 0xf8 }
	{ 0x06, 0xde }
	{ 0x87, 0x00 }
};
#endif

// TAS5825P from ECO-Mode to normal-Mode (set EQ settings)
const tas5825p_cfg_reg_t tas5825p_eco_to_normal_mode_config_1[] = {
	{ 0x00, 0x00 }
	{ 0x7f, 0xaa }
	{ 0x00, 0x02 }
	{ CFG_META_BURST, 61 }
	{ 0x08, 0x07 }
	{ 0xf8, 0x8e }
	{ 0xf6, 0xf0 }
	{ 0x0e, 0xe2 }
	{ 0x14, 0x07 }
	{ 0xf8, 0x8e }
	{ 0xf6, 0x0f }
	{ 0xf1, 0x12 }
	{ 0xbc, 0xf8 }
	{ 0x0e, 0xd6 }
	{ 0xe4, 0x08 }
	{ 0x02, 0xa7 }
	{ 0x63, 0xf0 }
	{ 0x04, 0x61 }
	{ 0x2f, 0x07 }
	{ 0xf9, 0x0f }
	{ 0xb2, 0x0f }
	{ 0xfb, 0x9e }
	{ 0xd1, 0xf8 }
	{ 0x04, 0x48 }
	{ 0xeb, 0x08 }
	{ 0x01, 0x20 }
	{ 0x26, 0xf0 }
	{ 0x08, 0xd7 }
	{ 0x96, 0x07 }
	{ 0xf6, 0x2e }
	{ 0x24, 0x0f }
	{ 0xf7, 0x28 }
	{ 0x6a, 0xf8 }
	{ 0x08, 0xb1 }
	{ 0xb7, 0x00 }
	{ 0x00, 0x03 }
	{ 0x08, 0x08 }
	{ 0x09, 0x00 }
	{ CFG_META_SWITCH, 18 }
};

// TAS5825P from ECO-Mode to normal-Mode (set DRC settings)
const tas5825p_cfg_reg_t tas5825p_eco_to_normal_mode_config_2[] = {
	{ 0x00, 0x00 }
	{ 0x7f, 0x8c }
	{ 0x00, 0x11 }
	{ CFG_META_BURST, 94 }
	{ 0x1c, 0x02 }
	{ 0xa3, 0x9a }
	{ 0xcc, 0x00 }
	{ 0x88, 0x3f }
	{ 0xd1, 0x00 }
	{ 0x09, 0xc0 }
	{ 0x3d, 0x00 }
	{ 0x00, 0x00 }
	{ 0x00, 0xff }
	{ 0xda, 0x12 }
	{ 0xf7, 0xff }
	{ 0x81, 0x47 }
	{ 0xae, 0xfc }
	{ 0x58, 0x8b }
	{ 0x89, 0xfd }
	{ 0x77, 0x8f }
	{ 0x45, 0x00 }
	{ 0x00, 0x00 }
	{ 0x00, 0xff }
	{ 0xaa, 0xf5 }
	{ 0x6a, 0x02 }
	{ 0xa3, 0x9a }
	{ 0xcc, 0x00 }
	{ 0x88, 0x3f }
	{ 0xd1, 0x00 }
	{ 0x09, 0xc0 }
	{ 0x3d, 0x00 }
	{ 0x00, 0x00 }
	{ 0x00, 0xff }
	{ 0xda, 0x12 }
	{ 0xf7, 0xff }
	{ 0x81, 0x47 }
	{ 0xae, 0xfc }
	{ 0x58, 0x8b }
	{ 0x89, 0xfd }
	{ 0x77, 0x8f }
	{ 0x45, 0x00 }
	{ 0x00, 0x00 }
	{ 0x00, 0xff }
	{ 0xaa, 0xf5 }
	{ 0x6a, 0x00 }
	{ 0xe2, 0xc4 }
	{ 0x6b, 0x00 }
	{ 0x88, 0x3f }
	{ 0xd1, 0x00 }
	{ 0x06, 0xd3 }
	{ 0x72, 0x00 }
	{ CFG_META_SWITCH, 7 }
	{ 0x00, 0x12 }
	{ CFG_META_BURST, 14 }
	{ 0x08, 0xff }
	{ 0x81, 0x47 }
	{ 0xae, 0xf9 }
	{ 0x06, 0x21 }
	{ 0xa9, 0xfd }
	{ 0x22, 0x84 }
	{ 0xae, 0x00 }
	{ CFG_META_SWITCH, 7 }
};

// TAS5825P from ECO-Mode to normal-Mode (set Volume to 7.5dB)
const tas5825p_cfg_reg_t tas5825p_eco_to_normal_mode_config_3[] = {
	{ 0x00, 0x00 }
	{ 0x7f, 0x8c }
	{ 0x00, 0x0b }
	{ CFG_META_BURST, 9 }
	{ 0x0c, 0x01 }
	{ 0x2f, 0x89 }
	{ 0x2c, 0x00 }
	{ 0x2f, 0x89 }
	{ 0x2c, 0x00 }
};

#define TAS5825P_NORMAL_TO_ECO_CONFIG1_REGISTERS_SIZE (sizeof(tas5825p_normal_to_eco_mode_config_1) / sizeof(tas5825p_normal_to_eco_mode_config_1[0]))
#define TAS5825P_NORMAL_TO_ECO_CONFIG2_REGISTERS_SIZE (sizeof(tas5825p_normal_to_eco_mode_config_2) / sizeof(tas5825p_normal_to_eco_mode_config_2[0]))
#define TAS5825P_NORMAL_TO_ECO_CONFIG3_REGISTERS_SIZE (sizeof(tas5825p_normal_to_eco_mode_config_3) / sizeof(tas5825p_normal_to_eco_mode_config_3[0]))
#define TAS5825P_ECO_TO_NORMAL_CONFIG1_REGISTERS_SIZE (sizeof(tas5825p_eco_to_normal_mode_config_1) / sizeof(tas5825p_eco_to_normal_mode_config_1[0]))
#define TAS5825P_ECO_TO_NORMAL_CONFIG2_REGISTERS_SIZE (sizeof(tas5825p_eco_to_normal_mode_config_2) / sizeof(tas5825p_eco_to_normal_mode_config_2[0]))
#define TAS5825P_ECO_TO_NORMAL_CONFIG3_REGISTERS_SIZE (sizeof(tas5825p_eco_to_normal_mode_config_3) / sizeof(tas5825p_eco_to_normal_mode_config_3[0]))