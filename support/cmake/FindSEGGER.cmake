# Segger RTT provides SEGGER_RTT_Syscalls_* files which overwrite _write, _write_r implementations,
# with SEGGER_RTT_Write function. Due to we have our own syscall.c file with syscalls implemetation,
# we don't include these files in our build. See syscall.c _write function.

SET(SEGGER_COMPONENTS rtt sysview)

SET(HAL_REQUIRED_COMPONENTS rtt)

SET(SEGGER_PREFIX SEGGER_)

IF(NOT SEGGER_FIND_COMPONENTS)
    SET(SEGGER_FIND_COMPONENTS ${HAL_REQUIRED_COMPONENTS})
    MESSAGE(STATUS "No SEGGER components selected, using: ${SEGGER_FIND_COMPONENTS}")
ENDIF()

SET(SEGGER_SRC_FILES
    SEGGER_RTT.c
    SEGGER_RTT_printf.c
)

SET(SEGGER_HEADERS
    SEGGER_RTT.h
    SEGGER_RTT_Conf.h
)

LIST(FIND SEGGER_FIND_COMPONENTS "sysview" _index)
IF(${_index} GREATER -1)
    LIST(APPEND SEGGER_SRC_FILES
            SEGGER_SYSVIEW.c
            SEGGER_SYSVIEW_FreeRTOS.c
            SEGGER_SYSVIEW_Config_FreeRTOS.c)

    LIST(APPEND SEGGER_SRC_FILES SEGGER_SYSVIEW_Int.h
            SEGGER_SYSVIEW.h
            SEGGER_SYSVIEW_FreeRTOS.h)

    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D SEGGER_SYSVIEW")
ENDIF()

FIND_PATH(SEGGER_INC_DIR ${SEGGER_HEADERS}
    HINTS ${CMAKE_SOURCE_DIR}/middleware/Third_Party/SEGGER
    CMAKE_FIND_ROOT_PATH_BOTH
)

FOREACH(SRC ${SEGGER_SRC_FILES})
    STRING(MAKE_C_IDENTIFIER "${SRC}" SRC_CLEAN)
    SET(SEGGER_${SRC_CLEAN}_FILE SEGGER_SRC_FILE-NOTFOUND)
    FIND_FILE(SEGGER_${SRC_CLEAN}_FILE ${SRC}
        HINTS ${SEGGER_INC_DIR}
        CMAKE_FIND_ROOT_PATH_BOTH
    )
    LIST(APPEND SEGGER_SOURCES ${SEGGER_${SRC_CLEAN}_FILE})
ENDFOREACH()

SET(SEGGER_INCLUDE_DIR ${SEGGER_INC_DIR})

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D SEGGER_RTT")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D SEGGER_RTT")

set_source_files_properties(${SEGGER_SOURCES} PROPERTIES COMPILE_FLAGS -Wno-array-bounds)

INCLUDE(FindPackageHandleStandardArgs)

FIND_PACKAGE_HANDLE_STANDARD_ARGS(SEGGER DEFAULT_MSG SEGGER_INCLUDE_DIR SEGGER_SOURCES)
